{"ast":null,"code":"import SpotifyWebApi from 'spotify-web-api-js';\nexport const handleSpotifyAuth = () => {\n  const authEndpoint = 'https://accounts.spotify.com/authorize';\n  const clientId = '8f294d8899f94e34b7690db17fe12fc9';\n  const scopes = ['user-library-read'];\n  const redirectUri = 'http://localhost:3000/callback/';\n  const authUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\n  window.location = authUrl;\n};\nexport const getSpotifyTokenFromUrl = () => {\n  const hash = window.location.hash;\n  const token = hash.substring(1).split('&')[0].split('=')[1];\n  return token;\n};\nexport const getLikedSongs = token => {\n  spotifyApi.setAccessToken(token);\n  const getAllTracks = async function () {\n    let offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const response = await spotifyApi.getMySavedTracks({\n      offset\n    });\n    const tracks = response.items.map(item => ({\n      name: item.track.name,\n      artist: item.track.artists[0].name\n    }));\n    if (response.next) {\n      // recursively get the next page of tracks\n      const nextTracks = await getAllTracks(offset + response.limit);\n      return [...tracks, ...nextTracks];\n    }\n    return tracks;\n  };\n  getAllTracks().then(tracks => {\n    console.log(tracks);\n    // do something with the songs\n  }).catch(error => console.log(error));\n};","map":{"version":3,"names":["SpotifyWebApi","handleSpotifyAuth","authEndpoint","clientId","scopes","redirectUri","authUrl","join","window","location","getSpotifyTokenFromUrl","hash","token","substring","split","getLikedSongs","spotifyApi","setAccessToken","getAllTracks","offset","arguments","length","undefined","response","getMySavedTracks","tracks","items","map","item","name","track","artist","artists","next","nextTracks","limit","then","console","log","catch","error"],"sources":["/Users/jay/Documents/GitHub/PlaylistTransfer-FE/src/spotifyApi.js"],"sourcesContent":["import SpotifyWebApi from 'spotify-web-api-js';\n\nexport const handleSpotifyAuth = () => {\n    const authEndpoint = 'https://accounts.spotify.com/authorize';\n    const clientId = '8f294d8899f94e34b7690db17fe12fc9';\n    const scopes = ['user-library-read'];\n    const redirectUri = 'http://localhost:3000/callback/';\n    const authUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n      '%20'\n    )}&response_type=token&show_dialog=true`;\n    window.location = authUrl;\n  };\n\n  export const getSpotifyTokenFromUrl = () => {\n    const hash = window.location.hash;\n    const token = hash.substring(1).split('&')[0].split('=')[1];\n    return token;\n  };\n\n\n  export const getLikedSongs = (token) => {\n    spotifyApi.setAccessToken(token);\n  \n    const getAllTracks = async (offset = 0) => {\n      const response = await spotifyApi.getMySavedTracks({ offset });\n      const tracks = response.items.map((item) => ({\n        name: item.track.name,\n        artist: item.track.artists[0].name,\n      }));\n  \n      if (response.next) {\n        // recursively get the next page of tracks\n        const nextTracks = await getAllTracks(offset + response.limit);\n        return [...tracks, ...nextTracks];\n      }\n  \n      return tracks;\n    };\n  \n    getAllTracks()\n      .then((tracks) => {\n        console.log(tracks);\n        // do something with the songs\n      })\n      .catch((error) => console.log(error));\n  };\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAE9C,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACnC,MAAMC,YAAY,GAAG,wCAAwC;EAC7D,MAAMC,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,MAAM,GAAG,CAAC,mBAAmB,CAAC;EACpC,MAAMC,WAAW,GAAG,iCAAiC;EACrD,MAAMC,OAAO,GAAI,GAAEJ,YAAa,cAAaC,QAAS,iBAAgBE,WAAY,UAASD,MAAM,CAACG,IAAI,CACpG,KAAK,CACL,uCAAsC;EACxCC,MAAM,CAACC,QAAQ,GAAGH,OAAO;AAC3B,CAAC;AAED,OAAO,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,MAAMC,IAAI,GAAGH,MAAM,CAACC,QAAQ,CAACE,IAAI;EACjC,MAAMC,KAAK,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3D,OAAOF,KAAK;AACd,CAAC;AAGD,OAAO,MAAMG,aAAa,GAAIH,KAAK,IAAK;EACtCI,UAAU,CAACC,cAAc,CAACL,KAAK,CAAC;EAEhC,MAAMM,YAAY,GAAG,eAAAA,CAAA,EAAsB;IAAA,IAAfC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACpC,MAAMG,QAAQ,GAAG,MAAMP,UAAU,CAACQ,gBAAgB,CAAC;MAAEL;IAAO,CAAC,CAAC;IAC9D,MAAMM,MAAM,GAAGF,QAAQ,CAACG,KAAK,CAACC,GAAG,CAAEC,IAAI,KAAM;MAC3CC,IAAI,EAAED,IAAI,CAACE,KAAK,CAACD,IAAI;MACrBE,MAAM,EAAEH,IAAI,CAACE,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACH;IAChC,CAAC,CAAC,CAAC;IAEH,IAAIN,QAAQ,CAACU,IAAI,EAAE;MACjB;MACA,MAAMC,UAAU,GAAG,MAAMhB,YAAY,CAACC,MAAM,GAAGI,QAAQ,CAACY,KAAK,CAAC;MAC9D,OAAO,CAAC,GAAGV,MAAM,EAAE,GAAGS,UAAU,CAAC;IACnC;IAEA,OAAOT,MAAM;EACf,CAAC;EAEDP,YAAY,EAAE,CACXkB,IAAI,CAAEX,MAAM,IAAK;IAChBY,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;IACnB;EACF,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}